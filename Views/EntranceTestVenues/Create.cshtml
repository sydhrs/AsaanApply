@model WebProject_NetFramework.DbContext.DbModels.EntranceTestVenue
@{
    ViewBag.Title = "Entrance Test Venues";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="m-portlet m-portlet--accent m-portlet--head-solid-bg m-portlet--head-sm" m-portlet="true" id="m_portlet_tools_1">
    <div class="m-portlet__head">
        <div class="m-portlet__head-caption">
            <div class="m-portlet__head-title">
                <h3 class="m-portlet__head-text">
                    Create
                </h3>
            </div>
        </div>
    </div>
    <div class="m-portlet__body">
        <div class="m-portlet">
            @using (Html.BeginForm("Create", "EntranceTestVenues", FormMethod.Post, new { @class = "m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.VenueName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.VenueName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VenueName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.VenueAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.VenueAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VenueAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.OpeningTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OpeningTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OpeningTime, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.OpeningTime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            <div class="input-group timepicker">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="la la-clock-o"></i>
                                    </span>
                                </div>
                                <input class="form-control m-input" id="m_timepicker_3" placeholder="Opening Time" type="text" tag="EntranceTestVenue">
                            </div>
                        </div>
                    </div>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.ClosingTime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            <div class="input-group timepicker">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="la la-clock-o"></i>
                                    </span>
                                </div>
                                <input class="form-control m-input" id="m_timepicker_3" placeholder="Closing Time" type="text" tag="EntranceTestVenue">
                            </div>
                        </div>
                    </div>

                    <!--<div class="form-group">
                        @* @Html.LabelFor(model => model.ClosingTime, htmlAttributes: new { @class = "control-label col-md-2" })-->
                        @*<div class="col-md-10">
                                @Html.EditorFor(model => model.ClosingTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ClosingTime, "", new { @class = "text-danger" })
                            </div>*@
                        <!--<div class="col-md-5">
                            <input class="form-control" type="date" placeholder="ClosingTime" name="ClosingTime" tag="EntranceTestVenue">
                        </div>
                    </div>--> 

                    <div class="form-group">
                        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })*@
                        <div class="col-md-5">
                            <input class="form-control" type="date" placeholder="CreatedDate" name="CreatedDate" tag="EntranceTestVenue">
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })*@
                        <div class="col-md-5">
                            <input class="form-control" type="date" placeholder="UpdatedDate" name="UpdatedDate" tag="EntranceTestVenue">
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="m-portlet__foot">
                    <button type="submit" class="btn btn-primary btn-large">Submit</button>
                    <button type="button" onclick="window.location.href = '/EntranceTestVenues/Index'" class="btn btn-primary btn-large">Back to List</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/bootstrap-timepicker.js" type="text/javascript"></script>
}
